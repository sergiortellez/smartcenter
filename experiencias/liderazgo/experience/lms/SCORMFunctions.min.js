var SCORM_LOGOUT="logout",SCORM_SUSPEND="suspend",SCORM_NORMAL_EXIT="",SCORM_TIMEOUT="time-out",SCORM_PASSED="passed",SCORM_FAILED="failed",SCORM_COMPLETED="completed",SCORM_BROWSED="browsed",SCORM_INCOMPLETE="incomplete",SCORM_NOT_ATTEMPTED="not attempted",SCORM_CREDIT="credit",SCORM_NO_CREDIT="no-credit",SCORM_BROWSE="browse",SCORM_NORMAL="normal",SCORM_REVIEW="review",SCORM_ENTRY_ABINITIO="ab-initio",SCORM_ENTRY_RESUME="resume",SCORM_ENTRY_NORMAL="",SCORM_TLA_EXIT_MESSAGE="exit,message",SCORM_TLA_EXIT_NO_MESSAGE="exit,no message",SCORM_TLA_CONTINUE_MESSAGE="continue,message",SCORM_TLA_CONTINUE_NO_MESSAGE="continue,no message",SCORM_RESULT_CORRECT="correct",SCORM_RESULT_WRONG="wrong",SCORM_RESULT_UNANTICIPATED="unanticipated",SCORM_RESULT_NEUTRAL="neutral",SCORM_INTERACTION_TYPE_TRUE_FALSE="true-false",SCORM_INTERACTION_TYPE_CHOICE="choice",SCORM_INTERACTION_FILL_IN="fill-in",SCORM_INTERACTION_TYPE_MATCHING="matching",SCORM_INTERACTION_TYPE_PERFORMANCE="performance",SCORM_INTERACTION_TYPE_SEQUENCING="sequencing",SCORM_INTERACTION_TYPE_LIKERT="likert",SCORM_INTERACTION_TYPE_NUMERIC="numeric",SCORM_NO_ERROR="0",SCORM_ERROR_INVALID_PREFERENCE="-1",SCORM_ERROR_INVALID_STATUS="-2",SCORM_ERROR_INVALID_SPEED="-3",SCORM_ERROR_INVALID_TIMESPAN="-4",SCORM_ERROR_INVALID_TIME_LIMIT_ACTION="-5",SCORM_ERROR_INVALID_DECIMAL="-6",SCORM_ERROR_INVALID_CREDIT="-7",SCORM_ERROR_INVALID_LESSON_MODE="-8",SCORM_ERROR_INVALID_ENTRY="-9",SCORM_TRUE="true",SCORM_FALSE="false",SCORM_findAPITries=0,SCORM_objAPI=null,intSCORMError=SCORM_NO_ERROR,strSCORMErrorString="",strSCORMErrorDiagnostic="",blnReviewModeSoReadOnly=!1;function SCORM_Initialize(){var blnResult=!0;WriteToDebug("In SCORM_Initialize"),SCORM_ClearErrorInfo(),WriteToDebug("Grabbing API");try{SCORM_objAPI=SCORM_GrabAPI()}catch(e){WriteToDebug("Error grabbing 1.2 API-"+e.name+":"+e.message)}return void 0===SCORM_objAPI||null==SCORM_objAPI?(WriteToDebug("Unable to acquire SCORM API:"),WriteToDebug("SCORM_objAPI="+typeof SCORM_objAPI),InitializeExecuted(!1,"Error - unable to acquire LMS API, content may not play properly and results may not be recorded.  Please contact technical support."),!1):(WriteToDebug("Calling LMSInit"),(blnResult=SCORM_CallLMSInitialize())?(SCORM_GetLessonMode()!=MODE_REVIEW?(SCORM_IsContentInBrowseMode()?(WriteToDebug("Setting Status to Browsed"),blnResult=SCORM_CallLMSSetValue("cmi.core.lesson_status",SCORM_BROWSED)):SCORM_GetStatus()==LESSON_STATUS_NOT_ATTEMPTED&&(WriteToDebug("Setting Status to Incomplete"),blnResult=SCORM_CallLMSSetValue("cmi.core.lesson_status",SCORM_INCOMPLETE)),blnResult=SCORM_CallLMSSetValue("cmi.core.exit",SCORM_TranslateExitTypeToSCORM(DEFAULT_EXIT_TYPE))&&blnResult):"undefined"!=typeof REVIEW_MODE_IS_READ_ONLY&&!0===REVIEW_MODE_IS_READ_ONLY&&(blnReviewModeSoReadOnly=!0),WriteToDebug("Calling InitializeExecuted with parameter-"+blnResult),void InitializeExecuted(blnResult,"")):(WriteToDebug("ERROR Initializing LMS"),InitializeExecuted(!1,"Error initializing communications with LMS"),!1))}function SCORM_Finish(strExitType,blnStatusWasSet){var strStatusAfterCompletion,blnResult=!0;return WriteToDebug("In SCORM_Finish strExitType="+strExitType+", blnStatusWasSet="+blnStatusWasSet),SCORM_ClearErrorInfo(),strExitType!=EXIT_TYPE_FINISH||blnStatusWasSet||(WriteToDebug("Getting completion status"),strStatusAfterCompletion=SCORM_GetCompletionStatus(),WriteToDebug("Setting completion status to "+strStatusAfterCompletion),blnResult=SCORM_CallLMSSetValue("cmi.core.lesson_status",strStatusAfterCompletion)&&blnResult),WriteToDebug("Setting Exit"),blnResult=SCORM_CallLMSSetValue("cmi.core.exit",SCORM_TranslateExitTypeToSCORM(strExitType))&&blnResult,WriteToDebug("Calling Commit"),blnResult=SCORM_CallLMSCommit()&&blnResult,WriteToDebug("Calling Finish"),blnResult=SCORM_CallLMSFinish()&&blnResult,WriteToDebug("Returning "+blnResult),blnResult}function SCORM_CommitData(){return WriteToDebug("In SCORM_CommitData"),SCORM_ClearErrorInfo(),SCORM_CallLMSCommit()}function SCORM_GetStudentID(){return WriteToDebug("In SCORM_GetStudentID"),SCORM_ClearErrorInfo(),SCORM_CallLMSGetValue("cmi.core.student_id")}function SCORM_GetStudentName(){return WriteToDebug("In SCORM_GetStudentName"),SCORM_ClearErrorInfo(),SCORM_CallLMSGetValue("cmi.core.student_name")}function SCORM_GetBookmark(){return WriteToDebug("In SCORM_GetBookmark"),SCORM_ClearErrorInfo(),SCORM_CallLMSGetValue("cmi.core.lesson_location")}function SCORM_SetBookmark(strBookmark){return WriteToDebug("In SCORM_SetBookmark strBookmark="+strBookmark),SCORM_ClearErrorInfo(),SCORM_CallLMSSetValue("cmi.core.lesson_location",strBookmark)}function SCORM_GetDataChunk(){return WriteToDebug("In SCORM_GetDataChunk"),SCORM_ClearErrorInfo(),SCORM_CallLMSGetValue("cmi.suspend_data")}function SCORM_SetDataChunk(strData){return WriteToDebug("In SCORM_SetDataDChunk"),SCORM_ClearErrorInfo(),SCORM_CallLMSSetValue("cmi.suspend_data",strData)}function SCORM_GetLaunchData(){return WriteToDebug("In SCORM_GetLaunchData"),SCORM_ClearErrorInfo(),SCORM_CallLMSGetValue("cmi.launch_data")}function SCORM_GetComments(){return WriteToDebug("In SCORM_GetComments"),SCORM_ClearErrorInfo(),SCORM_CallLMSGetValue("cmi.comments")}function SCORM_WriteComment(strComment){return WriteToDebug("In SCORM_WriteComment strComment="+strComment),SCORM_ClearErrorInfo(),SCORM_CallLMSSetValue("cmi.comments",strComment)}function SCORM_GetLMSComments(){return WriteToDebug("In SCORM_GetLMSComments"),SCORM_ClearErrorInfo(),SCORM_CallLMSGetValue("cmi.comments_from_lms")}function SCORM_GetAudioPlayPreference(){var intTempPreference;return WriteToDebug("In SCORM_GetAudioPlayPreference"),SCORM_ClearErrorInfo(),""==(intTempPreference=SCORM_CallLMSGetValue("cmi.student_preference.audio"))&&(intTempPreference=0),intTempPreference=parseInt(intTempPreference,10),WriteToDebug("intTempPreference="+intTempPreference),intTempPreference>0?(WriteToDebug("Returning On"),PREFERENCE_ON):0==intTempPreference?(WriteToDebug("Returning Default"),PREFERENCE_DEFAULT):intTempPreference<0?(WriteToDebug("returning Off"),PREFERENCE_OFF):(WriteToDebug("Error: Invalid preference"),SCORM_SetErrorInfoManually(SCORM_ERROR_INVALID_PREFERENCE,"Invalid audio preference received from LMS","intTempPreference="+intTempPreference),null)}function SCORM_GetAudioVolumePreference(){var intTempPreference;return WriteToDebug("In SCORM_GetAudioVollumePreference"),SCORM_ClearErrorInfo(),intTempPreference=SCORM_CallLMSGetValue("cmi.student_preference.audio"),WriteToDebug("intTempPreference="+intTempPreference),""==intTempPreference&&(intTempPreference=100),(intTempPreference=parseInt(intTempPreference,10))<=0&&(WriteToDebug("Setting to 100"),intTempPreference=100),intTempPreference>0&&intTempPreference<=100?(WriteToDebug("Returning "+intTempPreference),intTempPreference):(WriteToDebug("ERROR: invalid preference"),SCORM_SetErrorInfoManually(SCORM_ERROR_INVALID_PREFERENCE,"Invalid audio preference received from LMS","intTempPreference="+intTempPreference),null)}function SCORM_SetAudioPreference(PlayPreference,intPercentOfMaxVolume){return WriteToDebug("In SCORM_SetAudioPreference PlayPreference="+PlayPreference+", intPercentOfMaxVolume="+intPercentOfMaxVolume),SCORM_ClearErrorInfo(),PlayPreference==PREFERENCE_OFF&&(WriteToDebug("Setting percent to -1"),intPercentOfMaxVolume=-1),SCORM_CallLMSSetValue("cmi.student_preference.audio",intPercentOfMaxVolume)}function SCORM_SetLanguagePreference(strLanguage){return WriteToDebug("In SCORM_SetLanguagePreference strLanguage="+strLanguage),SCORM_ClearErrorInfo(),SCORM_CallLMSSetValue("cmi.student_preference.language",strLanguage)}function SCORM_GetLanguagePreference(){return WriteToDebug("In SCORM_GetLanguagePreference"),SCORM_ClearErrorInfo(),SCORM_CallLMSGetValue("cmi.student_preference.language")}function SCORM_SetSpeedPreference(intPercentOfMax){var intSCORMSpeed;return WriteToDebug("In SCORM_SetSpeedPreference intPercentOfMax="+intPercentOfMax),SCORM_ClearErrorInfo(),intSCORMSpeed=2*intPercentOfMax-100,WriteToDebug("intSCORMSpeed="+intSCORMSpeed),SCORM_CallLMSSetValue("cmi.student_preference.speed",intSCORMSpeed)}function SCORM_GetSpeedPreference(){var intSCORMSpeed,intPercentOfMax;return WriteToDebug("In SCORM_GetSpeedPreference"),SCORM_ClearErrorInfo(),intSCORMSpeed=SCORM_CallLMSGetValue("cmi.student_preference.speed"),WriteToDebug("intSCORMSpeed="+intSCORMSpeed),""==intSCORMSpeed&&(WriteToDebug("Detected empty string, defaulting to 100"),intSCORMSpeed=100),ValidInteger(intSCORMSpeed)?(intSCORMSpeed=parseInt(intSCORMSpeed,10))<-100||intSCORMSpeed>100?(WriteToDebug("ERROR - out of range"),SCORM_SetErrorInfoManually(SCORM_ERROR_INVALID_SPEED,"Invalid speed preference received from LMS - out of range","intSCORMSpeed="+intSCORMSpeed),null):(intPercentOfMax=(intSCORMSpeed+100)/2,intPercentOfMax=parseInt(intPercentOfMax,10),WriteToDebug("Returning "+intPercentOfMax),intPercentOfMax):(WriteToDebug("ERROR - invalid integer"),SCORM_SetErrorInfoManually(SCORM_ERROR_INVALID_SPEED,"Invalid speed preference received from LMS - not an integer","intSCORMSpeed="+intSCORMSpeed),null)}function SCORM_SetTextPreference(intPreference){return WriteToDebug("In SCORM_SetTextPreference intPreference="+intPreference),SCORM_ClearErrorInfo(),SCORM_CallLMSSetValue("cmi.student_preference.text",intPreference)}function SCORM_GetTextPreference(){var intTempPreference;return WriteToDebug("In SCORM_GetTextPreference"),SCORM_ClearErrorInfo(),intTempPreference=SCORM_CallLMSGetValue("cmi.student_preference.text"),intTempPreference=parseInt(intTempPreference,10),WriteToDebug("intTempPreference="+intTempPreference),intTempPreference>0?(WriteToDebug("Returning On"),PREFERENCE_ON):0==intTempPreference||""==intTempPreference?(WriteToDebug("Returning Default"),PREFERENCE_DEFAULT):intTempPreference<0?(WriteToDebug("returning Off"),PREFERENCE_OFF):(WriteToDebug("Error: Invalid preference"),SCORM_SetErrorInfoManually(SCORM_ERROR_INVALID_PREFERENCE,"Invalid text preference received from LMS","intTempPreference="+intTempPreference),null)}function SCORM_GetPreviouslyAccumulatedTime(){var strCMITime,intMilliseconds;return WriteToDebug("In SCORM_GetPreviouslyAccumulatedTime"),SCORM_ClearErrorInfo(),strCMITime=SCORM_CallLMSGetValue("cmi.core.total_time"),WriteToDebug("strCMITime="+strCMITime),IsValidCMITimeSpan(strCMITime)?(intMilliseconds=ConvertCMITimeSpanToMS(strCMITime),WriteToDebug("Returning "+intMilliseconds),intMilliseconds):(WriteToDebug("ERROR - Invalid CMITimeSpan"),SCORM_SetErrorInfoManually(SCORM_ERROR_INVALID_TIMESPAN,"Invalid timespan received from LMS","strTime="+strCMITime),null)}function SCORM_SaveTime(intMilliSeconds){var strCMITime;return WriteToDebug("In SCORM_SaveTime intMilliSeconds="+intMilliSeconds),SCORM_ClearErrorInfo(),strCMITime=ConvertMilliSecondsToSCORMTime(intMilliSeconds,!0),WriteToDebug("strCMITime="+strCMITime),SCORM_CallLMSSetValue("cmi.core.session_time",strCMITime)}function SCORM_GetMaxTimeAllowed(){var strCMITime,intMilliseconds;return WriteToDebug("In SCORM_GetMaxTimeAllowed"),SCORM_ClearErrorInfo(),strCMITime=SCORM_CallLMSGetValue("cmi.student_data.max_time_allowed"),WriteToDebug("strCMITime="+strCMITime),""==strCMITime&&(strCMITime="9999:99:99.99"),IsValidCMITimeSpan(strCMITime)?(intMilliseconds=ConvertCMITimeSpanToMS(strCMITime),WriteToDebug("intMilliseconds="+intMilliseconds),intMilliseconds):(WriteToDebug("ERROR - Invalid CMITimeSpan"),SCORM_SetErrorInfoManually(SCORM_ERROR_INVALID_TIMESPAN,"Invalid timespan received from LMS","strTime="+strCMITime),null)}function SCORM_DisplayMessageOnTimeout(){var strTLA;return SCORM_ClearErrorInfo(),WriteToDebug("In SCORM_DisplayMessageOnTimeout"),strTLA=SCORM_CallLMSGetValue("cmi.student_data.time_limit_action"),WriteToDebug("strTLA="+strTLA),strTLA==SCORM_TLA_EXIT_MESSAGE||strTLA==SCORM_TLA_CONTINUE_MESSAGE?(WriteToDebug("returning true"),!0):strTLA==SCORM_TLA_EXIT_NO_MESSAGE||strTLA==SCORM_TLA_CONTINUE_NO_MESSAGE||""==strTLA?(WriteToDebug("returning false"),!1):(WriteToDebug("Error invalid TLA"),SCORM_SetErrorInfoManually(SCORM_ERROR_INVALID_TIME_LIMIT_ACTION,"Invalid time limit action received from LMS","strTLA="+strTLA),null)}function SCORM_ExitOnTimeout(){var strTLA;return WriteToDebug("In SCORM_ExitOnTimeout"),SCORM_ClearErrorInfo(),strTLA=SCORM_CallLMSGetValue("cmi.student_data.time_limit_action"),WriteToDebug("strTLA="+strTLA),strTLA==SCORM_TLA_EXIT_MESSAGE||strTLA==SCORM_TLA_EXIT_NO_MESSAGE?(WriteToDebug("returning true"),!0):strTLA==SCORM_TLA_CONTINUE_MESSAGE||strTLA==SCORM_TLA_CONTINUE_NO_MESSAGE||""==strTLA?(WriteToDebug("returning false"),!1):(WriteToDebug("ERROR invalid TLA"),SCORM_SetErrorInfoManually(SCORM_ERROR_INVALID_TIME_LIMIT_ACTION,"Invalid time limit action received from LMS","strTLA="+strTLA),null)}function SCORM_GetPassingScore(){var fltScore;return WriteToDebug("In SCORM_GetPassingScore"),SCORM_ClearErrorInfo(),fltScore=SCORM_CallLMSGetValue("cmi.student_data.mastery_score"),WriteToDebug("fltScore="+fltScore),""==fltScore&&(fltScore=0),IsValidDecimal(fltScore)?(fltScore=parseFloat(fltScore),WriteToDebug("returning fltScore"),fltScore):(WriteToDebug("Error - score is not a valid decimal"),SCORM_SetErrorInfoManually(SCORM_ERROR_INVALID_DECIMAL,"Invalid mastery score received from LMS","fltScore="+fltScore),null)}function SCORM_SetScore(intScore,intMaxScore,intMinScore){var blnResult;return WriteToDebug("In SCORM_SetScore intScore="+intScore+", intMaxScore="+intMaxScore+", intMinScore="+intMinScore),SCORM_ClearErrorInfo(),blnResult=SCORM_CallLMSSetValue("cmi.core.score.raw",intScore),blnResult=SCORM_CallLMSSetValue("cmi.core.score.max",intMaxScore)&&blnResult,blnResult=SCORM_CallLMSSetValue("cmi.core.score.min",intMinScore)&&blnResult,WriteToDebug("Returning "+blnResult),blnResult}function SCORM_GetScore(){return WriteToDebug("In SCORM_GetScore"),SCORM_ClearErrorInfo(),SCORM_CallLMSGetValue("cmi.core.score.raw")}function SCORM_SetPointBasedScore(intScore,intMaxScore,intMinScore){return WriteToDebug("SCORM_SetPointBasedScore - SCORM 1.1 and 1.2 do not support SetPointBasedScore, returning false"),!1}function SCORM_GetScaledScore(intScore,intMaxScore,intMinScore){return WriteToDebug("SCORM_GetScaledScore - SCORM 1.1 and 1.2 do not support GetScaledScore, returning false"),!1}function SCORM_RecordInteraction(strID,strResponse,blnCorrect,strCorrectResponse,strDescription,intWeighting,intLatency,strLearningObjectiveID,dtmTime,scormInteractionType,strAlternateResponse,strAlternateCorrectResponse){var blnResult,blnTempResult,intInteractionIndex,strResult;return SCORM_ClearErrorInfo(),intInteractionIndex=SCORM_CallLMSGetValue("cmi.interactions._count"),WriteToDebug("intInteractionIndex="+intInteractionIndex),""==intInteractionIndex&&(WriteToDebug("Setting Interaction Index to 0"),intInteractionIndex=0),1==blnCorrect||blnCorrect==INTERACTION_RESULT_CORRECT?strResult=SCORM_RESULT_CORRECT:""==blnCorrect||"false"==blnCorrect||blnCorrect==INTERACTION_RESULT_WRONG?strResult=SCORM_RESULT_WRONG:blnCorrect==INTERACTION_RESULT_UNANTICIPATED?strResult=SCORM_RESULT_UNANTICIPATED:blnCorrect==INTERACTION_RESULT_NEUTRAL&&(strResult=SCORM_RESULT_NEUTRAL),WriteToDebug("strResult="+strResult),blnResult=SCORM_CallLMSSetValue("cmi.interactions."+intInteractionIndex+".id",strID),blnResult=SCORM_CallLMSSetValue("cmi.interactions."+intInteractionIndex+".type",scormInteractionType)&&blnResult,0==(blnTempResult=SCORM_CallLMSSetValue("cmi.interactions."+intInteractionIndex+".student_response",strResponse))&&(blnTempResult=SCORM_CallLMSSetValue("cmi.interactions."+intInteractionIndex+".student_response",strAlternateResponse)),blnResult=blnResult&&blnTempResult,null!=strCorrectResponse&&null!=strCorrectResponse&&""!=strCorrectResponse&&(0==(blnTempResult=SCORM_CallLMSSetValue("cmi.interactions."+intInteractionIndex+".correct_responses.0.pattern",strCorrectResponse))&&(blnTempResult=SCORM_CallLMSSetValue("cmi.interactions."+intInteractionIndex+".correct_responses.0.pattern",strAlternateCorrectResponse)),blnResult=blnResult&&blnTempResult),null!=strResult&&null!=strResult&&""!=strResult&&(blnResult=SCORM_CallLMSSetValue("cmi.interactions."+intInteractionIndex+".result",strResult)&&blnResult),null!=intWeighting&&null!=intWeighting&&""!=intWeighting&&(blnResult=SCORM_CallLMSSetValue("cmi.interactions."+intInteractionIndex+".weighting",intWeighting)&&blnResult),null!=intLatency&&null!=intLatency&&""!=intLatency&&(blnResult=SCORM_CallLMSSetValue("cmi.interactions."+intInteractionIndex+".latency",ConvertMilliSecondsToSCORMTime(intLatency,!0))&&blnResult),null!=strLearningObjectiveID&&null!=strLearningObjectiveID&&""!=strLearningObjectiveID&&(blnResult=SCORM_CallLMSSetValue("cmi.interactions."+intInteractionIndex+".objectives.0.id",strLearningObjectiveID)&&blnResult),blnResult=SCORM_CallLMSSetValue("cmi.interactions."+intInteractionIndex+".time",ConvertDateToCMITime(dtmTime))&&blnResult,WriteToDebug("Returning "+blnResult),blnResult}function SCORM_RecordTrueFalseInteraction(strID,blnResponse,blnCorrect,blnCorrectResponse,strDescription,intWeighting,intLatency,strLearningObjectiveID,dtmTime){WriteToDebug("In SCORM_RecordTrueFalseInteraction strID="+strID+", strResponse="+strResponse+", blnCorrect="+blnCorrect+", strCorrectResponse="+strCorrectResponse+", strDescription="+strDescription+", intWeighting="+intWeighting+", intLatency="+intLatency+", strLearningObjectiveID="+strLearningObjectiveID+", dtmTime="+dtmTime);var strResponse="",strCorrectResponse=null;return 1==blnCorrectResponse?strCorrectResponse="t":0==blnCorrectResponse&&(strCorrectResponse="f"),SCORM_RecordInteraction(strID,strResponse=1==blnResponse?"t":"f",blnCorrect,strCorrectResponse,strDescription,intWeighting,intLatency,strLearningObjectiveID,dtmTime,SCORM_INTERACTION_TYPE_TRUE_FALSE,strResponse,strCorrectResponse)}function SCORM_RecordMultipleChoiceInteraction(strID,aryResponse,blnCorrect,aryCorrectResponse,strDescription,intWeighting,intLatency,strLearningObjectiveID,dtmTime){WriteToDebug("In SCORM_RecordMultipleChoiceInteraction strID="+strID+", aryResponse="+aryResponse+", blnCorrect="+blnCorrect+", aryCorrectResponse="+aryCorrectResponse+", strDescription="+strDescription+", intWeighting="+intWeighting+", intLatency="+intLatency+", strLearningObjectiveID="+strLearningObjectiveID+", dtmTime="+dtmTime);for(var strResponse="",strResponseLong="",strCorrectResponse="",strCorrectResponseLong="",i=0,blnSuccessfullySaved;i<aryResponse.length;i++)strResponse.length>0&&(strResponse+=","),strResponseLong.length>0&&(strResponseLong+=","),strResponse+=aryResponse[i].Short,strResponseLong+=aryResponse[i].Long;for(var i=0;i<aryCorrectResponse.length;i++)strCorrectResponse.length>0&&(strCorrectResponse+=","),strCorrectResponseLong.length>0&&(strCorrectResponseLong+=","),strCorrectResponse+=aryCorrectResponse[i].Short,strCorrectResponseLong+=aryCorrectResponse[i].Long;return blnSuccessfullySaved=SCORM_RecordInteraction(strID,strResponseLong,blnCorrect,strCorrectResponseLong,strDescription,intWeighting,intLatency,strLearningObjectiveID,dtmTime,SCORM_INTERACTION_TYPE_CHOICE,strResponse,strCorrectResponse)}function SCORM_RecordFillInInteraction(strID,strResponse,blnCorrect,strCorrectResponse,strDescription,intWeighting,intLatency,strLearningObjectiveID,dtmTime){return WriteToDebug("In SCORM_RecordFillInInteraction strID="+strID+", strResponse="+strResponse+", blnCorrect="+blnCorrect+", strCorrectResponse="+strCorrectResponse+", strDescription="+strDescription+", intWeighting="+intWeighting+", intLatency="+intLatency+", strLearningObjectiveID="+strLearningObjectiveID+", dtmTime="+dtmTime),(strResponse=new String(strResponse)).length>255&&(strResponse=strResponse.substr(0,255)),null==strCorrectResponse&&(strCorrectResponse=""),(strCorrectResponse=new String(strCorrectResponse)).length>255&&(strCorrectResponse=strCorrectResponse.substr(0,255)),SCORM_RecordInteraction(strID,strResponse,blnCorrect,strCorrectResponse,strDescription,intWeighting,intLatency,strLearningObjectiveID,dtmTime,SCORM_INTERACTION_FILL_IN,strResponse,strCorrectResponse)}function SCORM_RecordMatchingInteraction(strID,aryResponse,blnCorrect,aryCorrectResponse,strDescription,intWeighting,intLatency,strLearningObjectiveID,dtmTime){WriteToDebug("In SCORM_RecordMatchingInteraction strID="+strID+", aryResponse="+aryResponse+", blnCorrect="+blnCorrect+", aryCorrectResponse="+aryCorrectResponse+", strDescription="+strDescription+", intWeighting="+intWeighting+", intLatency="+intLatency+", strLearningObjectiveID="+strLearningObjectiveID+", dtmTime="+dtmTime);for(var strResponse="",strResponseLong="",strCorrectResponse="",strCorrectResponseLong="",i=0,blnSuccessfullySaved;i<aryResponse.length;i++)strResponse.length>0&&(strResponse+=","),strResponseLong.length>0&&(strResponseLong+=","),strResponse+=aryResponse[i].Source.Short+"."+aryResponse[i].Target.Short,strResponseLong+=aryResponse[i].Source.Long+"."+aryResponse[i].Target.Long;for(var i=0;i<aryCorrectResponse.length;i++)strCorrectResponse.length>0&&(strCorrectResponse+=","),strCorrectResponseLong.length>0&&(strCorrectResponseLong+=","),strCorrectResponse+=aryCorrectResponse[i].Source.Short+"."+aryCorrectResponse[i].Target.Short,strCorrectResponseLong+=aryCorrectResponse[i].Source.Long+"."+aryCorrectResponse[i].Target.Long;return blnSuccessfullySaved=SCORM_RecordInteraction(strID,strResponseLong,blnCorrect,strCorrectResponseLong,strDescription,intWeighting,intLatency,strLearningObjectiveID,dtmTime,SCORM_INTERACTION_TYPE_MATCHING,strResponse,strCorrectResponse)}function SCORM_RecordPerformanceInteraction(strID,strResponse,blnCorrect,strCorrectResponse,strDescription,intWeighting,intLatency,strLearningObjectiveID,dtmTime){return WriteToDebug("In SCORM_RecordPerformanceInteraction strID="+strID+", strResponse="+strResponse+", blnCorrect="+blnCorrect+", strCorrectResponse="+strCorrectResponse+", strDescription="+strDescription+", intWeighting="+intWeighting+", intLatency="+intLatency+", strLearningObjectiveID="+strLearningObjectiveID+", dtmTime="+dtmTime),(strResponse=new String(strResponse)).length>255&&(strResponse=strResponse.substr(0,255)),null==strCorrectResponse&&(strCorrectResponse=""),(strCorrectResponse=new String(strCorrectResponse)).length>255&&(strCorrectResponse=strCorrectResponse.substr(0,255)),SCORM_RecordInteraction(strID,strResponse,blnCorrect,strCorrectResponse,strDescription,intWeighting,intLatency,strLearningObjectiveID,dtmTime,SCORM_INTERACTION_TYPE_PERFORMANCE,strResponse,strCorrectResponse)}function SCORM_RecordSequencingInteraction(strID,aryResponse,blnCorrect,aryCorrectResponse,strDescription,intWeighting,intLatency,strLearningObjectiveID,dtmTime){WriteToDebug("In SCORM_RecordSequencingInteraction strID="+strID+", aryResponse="+aryResponse+", blnCorrect="+blnCorrect+", aryCorrectResponse="+aryCorrectResponse+", strDescription="+strDescription+", intWeighting="+intWeighting+", intLatency="+intLatency+", strLearningObjectiveID="+strLearningObjectiveID+", dtmTime="+dtmTime);for(var strResponse="",strResponseLong="",strCorrectResponse="",strCorrectResponseLong="",i=0,blnSuccessfullySaved;i<aryResponse.length;i++)strResponse.length>0&&(strResponse+=","),strResponseLong.length>0&&(strResponseLong+=","),strResponse+=aryResponse[i].Short,strResponseLong+=aryResponse[i].Long;for(var i=0;i<aryCorrectResponse.length;i++)strCorrectResponse.length>0&&(strCorrectResponse+=","),strCorrectResponseLong.length>0&&(strCorrectResponseLong+=","),strCorrectResponse+=aryCorrectResponse[i].Short,strCorrectResponseLong+=aryCorrectResponse[i].Long;return blnSuccessfullySaved=SCORM_RecordInteraction(strID,strResponseLong,blnCorrect,strCorrectResponseLong,strDescription,intWeighting,intLatency,strLearningObjectiveID,dtmTime,SCORM_INTERACTION_TYPE_SEQUENCING,strResponse,strCorrectResponse)}function SCORM_RecordLikertInteraction(strID,response,blnCorrect,correctResponse,strDescription,intWeighting,intLatency,strLearningObjectiveID,dtmTime){var strResponse,strResponseLong;WriteToDebug("In SCORM_RecordLikertInteraction strID="+strID+", response="+response+", blnCorrect="+blnCorrect+", correctResponse="+correctResponse+", strDescription="+strDescription+", intWeighting="+intWeighting+", intLatency="+intLatency+", strLearningObjectiveID="+strLearningObjectiveID+", dtmTime="+dtmTime);var strCorrectResponse="",strCorrectResponseLong="",blnSuccessfullySaved;return strResponse=response.Short,strResponseLong=response.Long,null!=correctResponse&&(strCorrectResponse=correctResponse.Short,strCorrectResponseLong=correctResponse.Long),blnSuccessfullySaved=SCORM_RecordInteraction(strID,strResponseLong,blnCorrect,strCorrectResponseLong,strDescription,intWeighting,intLatency,strLearningObjectiveID,dtmTime,SCORM_INTERACTION_TYPE_LIKERT,strResponse,strCorrectResponse)}function SCORM_RecordNumericInteraction(strID,strResponse,blnCorrect,strCorrectResponse,strDescription,intWeighting,intLatency,strLearningObjectiveID,dtmTime){return WriteToDebug("In SCORM_RecordNumericInteraction strID="+strID+", strResponse="+strResponse+", blnCorrect="+blnCorrect+", strCorrectResponse="+strCorrectResponse+", strDescription="+strDescription+", intWeighting="+intWeighting+", intLatency="+intLatency+", strLearningObjectiveID="+strLearningObjectiveID+", dtmTime="+dtmTime),SCORM_RecordInteraction(strID,strResponse,blnCorrect,strCorrectResponse,strDescription,intWeighting,intLatency,strLearningObjectiveID,dtmTime,SCORM_INTERACTION_TYPE_NUMERIC,strResponse,strCorrectResponse)}function SCORM_GetEntryMode(){var strEntry;return WriteToDebug("In SCORM_GetEntryMode"),SCORM_ClearErrorInfo(),strEntry=SCORM_CallLMSGetValue("cmi.core.entry"),WriteToDebug("strEntry="+strEntry),strEntry==SCORM_ENTRY_ABINITIO?(WriteToDebug("Returning first time"),ENTRY_FIRST_TIME):strEntry==SCORM_ENTRY_RESUME?(WriteToDebug("Returning resume"),ENTRY_RESUME):strEntry==SCORM_ENTRY_NORMAL?(WriteToDebug("returning normal"),ENTRY_REVIEW):(WriteToDebug("ERROR - invalide entry mode"),SCORM_SetErrorInfoManually(SCORM_ERROR_INVALID_ENTRY,"Invalid entry vocab received from LMS","strEntry="+strEntry),null)}function SCORM_GetLessonMode(){var strLessonMode;return WriteToDebug("In SCORM_GetLessonMode"),SCORM_ClearErrorInfo(),strLessonMode=SCORM_CallLMSGetValue("cmi.core.lesson_mode"),WriteToDebug("strLessonMode="+strLessonMode),strLessonMode==SCORM_BROWSE?(WriteToDebug("Returning browse"),MODE_BROWSE):strLessonMode==SCORM_NORMAL?(WriteToDebug("returning normal"),MODE_NORMAL):strLessonMode==SCORM_REVIEW?(WriteToDebug("Returning Review"),MODE_REVIEW):(WriteToDebug("ERROR - invalid lesson mode"),SCORM_SetErrorInfoManually(SCORM_ERROR_INVALID_LESSON_MODE,"Invalid lesson_mode vocab received from LMS","strLessonMode="+strLessonMode),null)}function SCORM_GetTakingForCredit(){var strCredit;return WriteToDebug("In SCORM_GetTakingForCredit"),SCORM_ClearErrorInfo(),strCredit=SCORM_CallLMSGetValue("cmi.core.credit"),WriteToDebug("strCredit="+strCredit),"credit"==strCredit?(WriteToDebug("Returning true"),!0):"no-credit"==strCredit?(WriteToDebug("Returning false"),!1):(WriteToDebug("ERROR - invalid credit"),SCORM_SetErrorInfoManually(SCORM_ERROR_INVALID_CREDIT,"Invalid credit vocab received from LMS","strCredit="+strCredit),null)}function SCORM_SetObjectiveScore(strObjectiveID,intScore,intMaxScore,intMinScore){var intObjectiveIndex,blnResult;return WriteToDebug("In SCORM_SetObjectiveScore, strObejctiveID="+strObjectiveID+", intScore="+intScore+", intMaxScore="+intMaxScore+", intMinScore="+intMinScore),SCORM_ClearErrorInfo(),intObjectiveIndex=SCORM_FindObjectiveIndexFromID(strObjectiveID),WriteToDebug("intObjectiveIndex="+intObjectiveIndex),blnResult=SCORM_CallLMSSetValue("cmi.objectives."+intObjectiveIndex+".id",strObjectiveID),blnResult=SCORM_CallLMSSetValue("cmi.objectives."+intObjectiveIndex+".score.raw",intScore)&&blnResult,blnResult=SCORM_CallLMSSetValue("cmi.objectives."+intObjectiveIndex+".score.max",intMaxScore)&&blnResult,blnResult=SCORM_CallLMSSetValue("cmi.objectives."+intObjectiveIndex+".score.min",intMinScore)&&blnResult,WriteToDebug("Returning "+blnResult),blnResult}function SCORM_SetObjectiveDescription(strObjectiveID,strObjectiveDescription){var intObjectiveIndex,blnResult;return WriteToDebug("In SCORM_SetObjectiveDescription, strObjectiveDescription="+strObjectiveDescription),WriteToDebug("Objective Descriptions are not supported prior to SCORM 2004"),SCORM_ClearErrorInfo(),blnResult=SCORM_TRUE,WriteToDebug("Returning "+blnResult),blnResult}function SCORM_SetObjectiveStatus(strObjectiveID,Lesson_Status){var intObjectiveIndex,blnResult,strSCORMStatus="";return WriteToDebug("In SCORM_SetObjectiveStatus strObjectiveID="+strObjectiveID+", Lesson_Status="+Lesson_Status),SCORM_ClearErrorInfo(),intObjectiveIndex=SCORM_FindObjectiveIndexFromID(strObjectiveID),WriteToDebug("intObjectiveIndex="+intObjectiveIndex),Lesson_Status==LESSON_STATUS_PASSED?strSCORMStatus=SCORM_PASSED:Lesson_Status==LESSON_STATUS_FAILED?strSCORMStatus=SCORM_FAILED:Lesson_Status==LESSON_STATUS_COMPLETED?strSCORMStatus=SCORM_COMPLETED:Lesson_Status==LESSON_STATUS_BROWSED?strSCORMStatus=SCORM_BROWSED:Lesson_Status==LESSON_STATUS_INCOMPLETE?strSCORMStatus=SCORM_INCOMPLETE:Lesson_Status==LESSON_STATUS_NOT_ATTEMPTED&&(strSCORMStatus=SCORM_NOT_ATTEMPTED),WriteToDebug("strSCORMStatus="+strSCORMStatus),blnResult=SCORM_CallLMSSetValue("cmi.objectives."+intObjectiveIndex+".id",strObjectiveID),blnResult=SCORM_CallLMSSetValue("cmi.objectives."+intObjectiveIndex+".status",strSCORMStatus)&&blnResult,WriteToDebug("Returning "+blnResult),blnResult}function SCORM_GetObjectiveScore(strObjectiveID){var intObjectiveIndex;return WriteToDebug("In SCORM_GetObjectiveScore, strObejctiveID="+strObjectiveID),SCORM_ClearErrorInfo(),intObjectiveIndex=SCORM_FindObjectiveIndexFromID(strObjectiveID),WriteToDebug("intObjectiveIndex="+intObjectiveIndex),SCORM_CallLMSGetValue("cmi.objectives."+intObjectiveIndex+".score.raw")}function SCORM_GetObjectiveDescription(strObjectiveID){return WriteToDebug("In SCORM_GetObjectiveDescription, strObejctiveID="+strObjectiveID),WriteToDebug("ObjectiveDescription is not supported prior to SCORM 2004"),""}function SCORM_GetObjectiveStatus(strObjectiveID){var intObjectiveIndex,strStatus;return WriteToDebug("In SCORM_GetObjectiveStatus, strObejctiveID="+strObjectiveID),SCORM_ClearErrorInfo(),intObjectiveIndex=SCORM_FindObjectiveIndexFromID(strObjectiveID),WriteToDebug("intObjectiveIndex="+intObjectiveIndex),(strStatus=SCORM_CallLMSGetValue("cmi.objectives."+intObjectiveIndex+".status"))==SCORM_PASSED?(WriteToDebug("returning Passed"),LESSON_STATUS_PASSED):strStatus==SCORM_FAILED?(WriteToDebug("Returning Failed"),LESSON_STATUS_FAILED):strStatus==SCORM_COMPLETED?(WriteToDebug("Returning Completed"),LESSON_STATUS_COMPLETED):strStatus==SCORM_BROWSED?(WriteToDebug("Returning Browsed"),LESSON_STATUS_BROWSED):strStatus==SCORM_INCOMPLETE?(WriteToDebug("Returning Incomplete"),LESSON_STATUS_INCOMPLETE):strStatus==SCORM_NOT_ATTEMPTED||""==strStatus?(WriteToDebug("Returning Not Attempted"),LESSON_STATUS_NOT_ATTEMPTED):(WriteToDebug("ERROR - status not found"),SCORM_SetErrorInfoManually(SCORM_ERROR_INVALID_STATUS,"Invalid objective status received from LMS or initial status not yet recorded for objective","strStatus="+strStatus),null)}function SCORM_FindObjectiveIndexFromID(strObjectiveID){var intCount,i,strTempID;if(WriteToDebug("In SCORM_FindObjectiveIndexFromID"),""==(intCount=SCORM_CallLMSGetValue("cmi.objectives._count")))return WriteToDebug("Setting intCount=0"),0;for(intCount=parseInt(intCount,10),WriteToDebug("intCount="+intCount),i=0;i<intCount;i++)if(WriteToDebug("Checking index "+i),strTempID=SCORM_CallLMSGetValue("cmi.objectives."+i+".id"),WriteToDebug("ID="+strTempID),strTempID==strObjectiveID)return WriteToDebug("Found Matching index"),i;return WriteToDebug("Did not find match, returning count"),intCount}function SCORM_FindInteractionIndexFromID(strInteractionID){return WriteToDebug("SCORM_FindInteractionIndexFromID - SCORM does not support interaction retrieval, returning null"),null}function SCORM_GetInteractionType(strInteractionID){return WriteToDebug("SCORM_GetInteractionType - SCORM does not support interaction retrieval, returning empty string"),""}function SCORM_GetInteractionTimestamp(strInteractionID){return WriteToDebug("SCORM_GetInteractionTimestamp - SCORM does not support interaction retrieval, returning empty string"),""}function SCORM_GetInteractionCorrectResponses(strInteractionID){return WriteToDebug("SCORM_GetInteractionCorrectResponses - SCORM does not support interaction retrieval, returning empty array"),new Array}function SCORM_GetInteractionWeighting(strInteractionID){return WriteToDebug("SCORM_GetInteractionWeighting - SCORM does not support interaction retrieval, returning empty string"),""}function SCORM_GetInteractionLearnerResponses(strInteractionID){return WriteToDebug("SCORM_GetInteractionLearnerResponses - SCORM does not support interaction retrieval, returning empty array"),new Array}function SCORM_GetInteractionResult(strInteractionID){return WriteToDebug("SCORM_GetInteractionResult - SCORM does not support interaction retrieval, returning empty string"),""}function SCORM_GetInteractionLatency(strInteractionID){return WriteToDebug("SCORM_GetInteractionDescription - SCORM does not support interaction retrieval, returning empty string"),""}function SCORM_GetInteractionDescription(strInteractionID){return WriteToDebug("SCORM_GetInteractionDescription - SCORM does not support interaction retrieval, returning empty string"),""}function SCORM_CreateDataBucket(strBucketId,intMinSize,intMaxSize){return WriteToDebug("SCORM_CreateDataBucket - SCORM 1.1 and 1.2 do not support SSP, returning false"),!1}function SCORM_GetDataFromBucket(strBucketId){return WriteToDebug("SCORM_GetDataFromBucket - SCORM 1.1 and 1.2 do not support SSP, returning empty string"),""}function SCORM_PutDataInBucket(strBucketId,strData,blnAppendToEnd){return WriteToDebug("SCORM_PutDataInBucket - SCORM 1.1 and 1.2 do not support SSP, returning false"),!1}function SCORM_DetectSSPSupport(){return WriteToDebug("SCORM_DetectSSPSupport - SCORM 1.1 and 1.2 do not support SSP, returning false"),!1}function SCORM_GetBucketInfo(strBucketId){return WriteToDebug("AICC_DetectSSPSupport - SCORM 1.1 and 1.2 do not support SSP, returning empty SSPBucketSize"),new SSPBucketSize(0,0)}function SCORM_SetFailed(){return WriteToDebug("In SCORM_SetFailed"),SCORM_ClearErrorInfo(),SCORM_CallLMSSetValue("cmi.core.lesson_status",SCORM_FAILED)}function SCORM_SetPassed(){return WriteToDebug("In SCORM_SetPassed"),SCORM_ClearErrorInfo(),SCORM_CallLMSSetValue("cmi.core.lesson_status",SCORM_PASSED)}function SCORM_SetCompleted(){return WriteToDebug("In SCORM_SetPassed"),SCORM_ClearErrorInfo(),SCORM_CallLMSSetValue("cmi.core.lesson_status",SCORM_COMPLETED)}function SCORM_ResetStatus(){return WriteToDebug("In SCORM_ResetStatus"),SCORM_ClearErrorInfo(),SCORM_CallLMSSetValue("cmi.core.lesson_status",SCORM_INCOMPLETE)}function SCORM_GetStatus(){var strStatus;return WriteToDebug("In SCORM_GetStatus"),SCORM_ClearErrorInfo(),strStatus=SCORM_CallLMSGetValue("cmi.core.lesson_status"),WriteToDebug("strStatus="+strStatus),strStatus==SCORM_PASSED?(WriteToDebug("returning Passed"),LESSON_STATUS_PASSED):strStatus==SCORM_FAILED?(WriteToDebug("Returning Failed"),LESSON_STATUS_FAILED):strStatus==SCORM_COMPLETED?(WriteToDebug("Returning Completed"),LESSON_STATUS_COMPLETED):strStatus==SCORM_BROWSED?(WriteToDebug("Returning Browsed"),LESSON_STATUS_BROWSED):strStatus==SCORM_INCOMPLETE?(WriteToDebug("Returning Incomplete"),LESSON_STATUS_INCOMPLETE):strStatus==SCORM_NOT_ATTEMPTED?(WriteToDebug("Returning Not Attempted"),LESSON_STATUS_NOT_ATTEMPTED):(WriteToDebug("ERROR - status not found"),SCORM_SetErrorInfoManually(SCORM_ERROR_INVALID_STATUS,"Invalid lesson status received from LMS","strStatus="+strStatus),null)}function SCORM_GetProgressMeasure(){return WriteToDebug("SCORM_GetProgressMeasure - SCORM 1.1 and 1.2 do not support progress_measure, returning false"),!1}function SCORM_SetProgressMeasure(){return WriteToDebug("SCORM_SetProgressMeasure - SCORM 1.1 and 1.2 do not support progress_measure, returning false"),!1}function SCORM_GetObjectiveProgressMeasure(){return WriteToDebug("SCORM_GetObjectiveProgressMeasure - SCORM 1.1 and 1.2 do not support progress_measure, returning false"),!1}function SCORM_SetObjectiveProgressMeasure(){return WriteToDebug("SCORM_SetObjectiveProgressMeasure - SCORM 1.1 and 1.2 do not support progress_measure, returning false"),!1}function SCORM_IsContentInBrowseMode(){var strLessonMode;return WriteToDebug("In SCORM_IsContentInBrowseMode"),strLessonMode=SCORM_CallLMSGetValue("cmi.core.lesson_mode"),WriteToDebug("SCORM_IsContentInBrowseMode,  strLessonMode="+strLessonMode),strLessonMode==SCORM_BROWSE?(WriteToDebug("Returning true"),!0):(WriteToDebug("Returning false"),!1)}function SCORM_TranslateExitTypeToSCORM(strExitType){return WriteToDebug("In SCORM_TranslatgeExitTypeToSCORM strExitType-"+strExitType),strExitType==EXIT_TYPE_SUSPEND?(WriteToDebug("Returning suspend"),SCORM_SUSPEND):strExitType==EXIT_TYPE_UNLOAD?(WriteToDebug("Returning Exit"),SCORM_NORMAL_EXIT):strExitType==EXIT_TYPE_FINISH?(WriteToDebug("Returning Logout"),SCORM_NORMAL_EXIT):strExitType==EXIT_TYPE_TIMEOUT?(WriteToDebug("Returning Timout"),SCORM_TIMEOUT):void 0}function SCORM_GetCompletionStatus(){return WriteToDebug("In SCORM_GetCompletionStatus"),SCORM_IsContentInBrowseMode()?(WriteToDebug("Returning browsed"),SCORM_BROWSED):(WriteToDebug("Returning Completed"),SCORM_COMPLETED)}function SCORM_CallLMSInitialize(){var strResult;return WriteToDebug("In SCORM_CallLMSInitialize"),SCORM_objAPI=SCORM_GrabAPI(),WriteToDebug("Calling LMSInitialize"),strResult=SCORM_objAPI.LMSInitialize(""),strResult+="",WriteToDebug("strResult="+strResult),strResult==SCORM_FALSE?(WriteToDebug("Detected failed call to initialize"),SCORM_SetErrorInfo(),WriteToDebug("Error calling LMSInitialize:"),WriteToDebug("              intSCORMError="+intSCORMError),WriteToDebug("              SCORMErrorString="+strSCORMErrorString),WriteToDebug("              Diagnostic="+strSCORMErrorDiagnostic),!1):(WriteToDebug("Returning true"),!0)}function SCORM_CallLMSSetValue(strElement,strValue){var strResult;return WriteToDebug("SCORM_CallLMSSetValue strElement="+strElement+", strValue="+strValue),!0===blnReviewModeSoReadOnly?(WriteToDebug("Mode is Review and configuration setting dictates this should be read only so exiting."),!0):(SCORM_objAPI=SCORM_GrabAPI(),WriteToDebug("Calling LMSSetValue"),strElement+="",strValue+="",strResult=SCORM_objAPI.LMSSetValue(strElement,strValue),strResult+="",WriteToDebug("strResult="+strResult),strResult==SCORM_FALSE?(WriteToDebug("Detected Failed call to LMSSetvalue"),SCORM_SetErrorInfo(),WriteToDebug("Error calling LMSSetValue:"),WriteToDebug("              strElement="+strElement),WriteToDebug("              strValue="+strValue),WriteToDebug("              intSCORMError="+intSCORMError),WriteToDebug("              SCORMErrorString="+strSCORMErrorString),WriteToDebug("              Diagnostic="+strSCORMErrorDiagnostic),!1):(WriteToDebug("Returning true"),!0))}function SCORM_CallLMSGetValue(strElement){var strResult;return WriteToDebug("In SCORM_CallLMSGetValue strElement="+strElement),SCORM_objAPI=SCORM_GrabAPI(),WriteToDebug("Call LMSGetValue"),strElement+="",strResult=SCORM_objAPI.LMSGetValue(strElement)+"",WriteToDebug("strResult="+strResult),intSCORMError=SCORM_objAPI.LMSGetLastError(),intSCORMError+="",WriteToDebug("intSCORMError="+intSCORMError),intSCORMError!=SCORM_NO_ERROR&&(WriteToDebug("Detected failed called to LMSGetValue"),SCORM_SetErrorInfo(),WriteToDebug("Error calling LMSGetValue:"),WriteToDebug("              strElement="+strElement),WriteToDebug("              intSCORMError="+intSCORMError),WriteToDebug("              SCORMErrorString="+strSCORMErrorString),WriteToDebug("              Diagnostic="+strSCORMErrorDiagnostic)),WriteToDebug("Returning "+strResult),strResult}function SCORM_CallLMSCommit(){var strResult;return WriteToDebug("In SCORM_CallLMSCommit"),SCORM_objAPI=SCORM_GrabAPI(),WriteToDebug("Calling LMSCommit"),strResult=SCORM_objAPI.LMSCommit(""),strResult+="",WriteToDebug("strResult="+strResult),strResult==SCORM_FALSE?(WriteToDebug("Detected failed call to LMSCommit"),SCORM_SetErrorInfo(),WriteToDebug("Error calling LMSCommit:"),WriteToDebug("              intSCORMError="+intSCORMError),WriteToDebug("              SCORMErrorString="+strSCORMErrorString),WriteToDebug("              Diagnostic="+strSCORMErrorDiagnostic),!1):(WriteToDebug("Returning true"),!0)}function SCORM_CallLMSFinish(){var strResult;return WriteToDebug("In SCORM_CallLMSFinish"),SCORM_objAPI=SCORM_GrabAPI(),WriteToDebug("Calling LMS Finish"),strResult=SCORM_objAPI.LMSFinish(""),strResult+="",WriteToDebug("strResult="+strResult),strResult==SCORM_FALSE?(WriteToDebug("Detected failed call to LMSFinish"),SCORM_SetErrorInfo(),WriteToDebug("Error calling LMSFinish:"),WriteToDebug("              intSCORMError="+intSCORMError),WriteToDebug("              SCORMErrorString="+strSCORMErrorString),WriteToDebug("              Diagnostic="+strSCORMErrorDiagnostic),!1):(WriteToDebug("Returning True"),!0)}function SCORM_ClearErrorInfo(){WriteToDebug("In SCORM_ClearErrorInfo"),intSCORMError=SCORM_NO_ERROR,strSCORMErrorString="",strSCORMErrorDiagnostic=""}function SCORM_SetErrorInfo(){WriteToDebug("In SCORM_SetErrorInfo"),intSCORMError=SCORM_objAPI.LMSGetLastError(),strSCORMErrorString=SCORM_objAPI.LMSGetErrorString(intSCORMError),strSCORMErrorDiagnostic=SCORM_objAPI.LMSGetDiagnostic(""),intSCORMError+="",strSCORMErrorString+="",strSCORMErrorDiagnostic+="",WriteToDebug("intSCORMError="+intSCORMError),WriteToDebug("strSCORMErrorString="+strSCORMErrorString),WriteToDebug("strSCORMErrorDiagnostic="+strSCORMErrorDiagnostic)}function SCORM_SetErrorInfoManually(intNum,strString,strDiagnostic){WriteToDebug("In SCORM_SetErrorInfoManually"),WriteToDebug("ERROR-Num="+intNum),WriteToDebug("      String="+strString),WriteToDebug("      Diag="+strDiagnostic),intSCORMError=intNum,strSCORMErrorString=strString,strSCORMErrorDiagnostic=strDiagnostic}function SCORM_GetLastError(){return WriteToDebug("In SCORM_GetLastError"),intSCORMError==SCORM_NO_ERROR?(WriteToDebug("Returning No Error"),NO_ERROR):(WriteToDebug("Returning "+intSCORMError),intSCORMError)}function SCORM_GetLastErrorDesc(){return WriteToDebug("In SCORM_GetLastErrorDesc, "+strSCORMErrorString+"\n"+strSCORMErrorDiagnostic),strSCORMErrorString+"\n"+strSCORMErrorDiagnostic}function SCORM_GrabAPI(){return WriteToDebug("In SCORM_GrabAPI"),void 0!==SCORM_objAPI&&null!=SCORM_objAPI||(WriteToDebug("Searching with improved ADL algorithm"),SCORM_objAPI=SCORM_GetAPI()),void 0!==SCORM_objAPI&&null!=SCORM_objAPI||(SCORM_objAPI=SCORM_SearchForAPI(window)),WriteToDebug("SCORM_GrabAPI, returning"),SCORM_objAPI}function SCORM_SearchForAPI(wndLookIn){WriteToDebug("SCORM_SearchForAPI");var objAPITemp=null,strDebugID="";return strDebugID="Name="+wndLookIn.name+", href="+wndLookIn.location.href,SCORM_APIFound(objAPITemp=wndLookIn.API)?(WriteToDebug("Found API in this window - "+strDebugID),objAPITemp):(SCORM_WindowHasParent(wndLookIn)&&(WriteToDebug("Searching Parent - "+strDebugID),objAPITemp=SCORM_SearchForAPI(wndLookIn.parent)),SCORM_APIFound(objAPITemp)?(WriteToDebug("Found API in a parent - "+strDebugID),objAPITemp):(SCORM_WindowHasOpener(wndLookIn)&&(WriteToDebug("Searching Opener - "+strDebugID),objAPITemp=SCORM_SearchForAPI(wndLookIn.opener)),SCORM_APIFound(objAPITemp)?(WriteToDebug("Found API in an opener - "+strDebugID),objAPITemp):(WriteToDebug("Looking in children - "+strDebugID),SCORM_APIFound(objAPITemp=SCORM_LookInChildren(wndLookIn))?(WriteToDebug("Found API in Children - "+strDebugID),objAPITemp):(WriteToDebug("Didn't find API in this window - "+strDebugID),null))))}function SCORM_LookInChildren(wnd){WriteToDebug("SCORM_LookInChildren");var objAPITemp=null,strDebugID="";strDebugID="Name="+wnd.name+", href="+wnd.location.href;for(var i=0;i<wnd.frames.length;i++){if(WriteToDebug("Looking in child frame "+i),SCORM_APIFound(objAPITemp=wnd.frames[i].API))return WriteToDebug("Found API in child frame of "+strDebugID),objAPITemp;if(WriteToDebug("Looking in this child's children "+strDebugID),SCORM_APIFound(objAPITemp=SCORM_LookInChildren(wnd.frames[i])))return WriteToDebug("API found in this child's children "+strDebugID),objAPITemp}return null}function SCORM_WindowHasOpener(wnd){return WriteToDebug("In SCORM_WindowHasOpener"),null!=wnd.opener&&wnd.opener!=wnd&&void 0!==wnd.opener?(WriteToDebug("Window Does Have Opener"),!0):(WriteToDebug("Window Does Not Have Opener"),!1)}function SCORM_WindowHasParent(wnd){return WriteToDebug("In SCORM_WindowHasParent"),null!=wnd.parent&&wnd.parent!=wnd&&void 0!==wnd.parent?(WriteToDebug("Window Does Have Parent"),!0):(WriteToDebug("Window Does Not Have Parent"),!1)}function SCORM_APIFound(obj){return WriteToDebug("In SCORM_APIFound"),null==obj||void 0===obj?(WriteToDebug("API NOT Found"),!1):(WriteToDebug("API Found"),!0)}function SCORM_ScanParentsForApi(win){WriteToDebug("In SCORM_ScanParentsForApi, win="+win.location);for(var MAX_PARENTS_TO_SEARCH=500,nParentsSearched=0;(null==win.API||void 0===win.API)&&null!=win.parent&&win.parent!=win&&nParentsSearched<=500;)nParentsSearched++,win=win.parent;return win.API}function SCORM_GetAPI(){WriteToDebug("In SCORM_GetAPI");var API=null;return null!=window.parent&&window.parent!=window&&(WriteToDebug("SCORM_GetAPI, searching parent"),API=SCORM_ScanParentsForApi(window.parent)),null==API&&null!=window.top.opener&&(WriteToDebug("SCORM_GetAPI, searching opener"),API=SCORM_ScanParentsForApi(window.top.opener)),API}